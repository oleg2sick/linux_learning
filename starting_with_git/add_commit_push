From here I start to learn how to git

При создании файла, он переходит в статус "untracked" ("modified" в случае изменения имеющегося файла)
После добавления файла git add . он переходит в статус подготовленный (к коммиту)
После коммита git commit -m "commit description" переходит в статус зафиксированный
git status - чтобы узнать текущий статус репозитория
Разновидности git add:
git add . - добавить все файлы в текущей папке;
git add *.sql - добавить все файлы в текущей папке с расширением .sql
git add dir/*.sql - добавить все файлы в папке dir с расширением .sql
git add dir - добавить все файлы в папке dir
git add "*.sql" - добавить все файлы в проекте с расширением .sql

команда git log позволяет посмотреть всю историю коммитов

				BRANCHING
MAIN (MASTER) ветка - стабильная версия проекта
Новые функции разрабатываются в отдельных ветках
После завершения работы над задачами, отдельные ветки сливаются в main branch
Команды для работы с ветками:
git branch branch_name - создание новой ветки
git branch - посмотреть на какой ты ветке
git branch -d branch_name - удаление ветки
git checkout branch_name  - переключение между ветками

git merge branch_name - для слияния отдельной ветки с веткой main

#testing smthing
